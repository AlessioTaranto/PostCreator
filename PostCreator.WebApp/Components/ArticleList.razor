@page "/article-list"
@using static PostCreator.Core.Models
@using PostCreator.Core.Services
@inject IOpenAIService OpenAIService

@if (isLoading)
{
    <div class="card-container">
        <div class="skeleton-card">
            <div class="skeleton-title"></div>
            <div class="skeleton-text"></div>
        </div>
        <div class="skeleton-card">
            <div class="skeleton-title"></div>
            <div class="skeleton-text"></div>
        </div>
        <div class="skeleton-card">
            <div class="skeleton-title"></div>
            <div class="skeleton-text"></div>
        </div>
    </div>
}
else if (Articles != null)
{
    <div class="card-container">
        @foreach (var article in Articles)
        {
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">@article.Title</h5>
                    <p class="card-text">@article.Subtitle</p>
                    <button class="btn btn-secondary" @onclick="() => SelectArticle(article)">
                        <i class="far fa-copy btn-icon"></i> Select
                    </button>
                </div>
            </div>
        }
    </div>
}

@code {
    [Parameter] public List<Article>? Articles { get; set; }
    [Parameter] public EventCallback<Article> OnArticleSelected { get; set; }
    private bool isLoading;

    public async Task LoadArticles(string prompt)
    {
        isLoading = true;
        Articles = null;

        // Simulate a delay for loading
        await Task.Delay(2000);
        Articles = new List<Article> {
            new Article ("Generated Article 1", "Subtitle of the first article..."),
            new Article ("Generated Article 2", "Subtitle of the second article..."),
            new Article ("Generated Article 3", "Subtitle of the third article...")
        };

        isLoading = false;
    }

    private async Task SelectArticle(Article article)
    {
        if (OnArticleSelected.HasDelegate)
        {
            await OnArticleSelected.InvokeAsync(article);
        }
    }
}
